{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\frontend\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clicking = () => console.log(\"Yeees\");\n_c = Clicking;\nconst mouseK = () => console.log(\"noood\");\nconst helpText = \"Help text\";\nconst textBlock = {\n  id: \"id\",\n  type: \"text\",\n  chars: [{\n    value: \"h\",\n    fontSize: 12,\n    fontFamily: \"Arial\",\n    color: \"#ff0000\",\n    bold: true\n  }]\n};\nconst imageBlock = {\n  id: \"id\",\n  type: \"image\",\n  data: \"https://\"\n};\nconst graphicBlock = {\n  id: \"id\",\n  type: \"graphic\",\n  data: {}\n};\nconst templates = {\n  pages: [{\n    typeContent: [textBlock, imageBlock, graphicBlock],\n    currentSelection: {\n      position: {\n        x: 0,\n        y: 0\n      },\n      size: {\n        width: 100,\n        height: 100\n      }\n    },\n    size: {\n      width: 800,\n      height: 600\n    },\n    layerType: \"layerType\"\n  }]\n};\nconst canvas = {\n  backgroundColor: \"#fff\",\n  size: {\n    width: 1200,\n    height: 900\n  },\n  layers: [],\n  currentSelection: {\n    position: {\n      x: 0,\n      y: 0\n    },\n    size: {\n      width: 0,\n      height: 0\n    }\n  }\n};\nconsole.log(canvas, templates);\nconst elemets = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"name\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    placeholder: helpText,\n    onClick: Clicking,\n    onMouseEnter: mouseK\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: 1 + 5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: helpText === \"Help text\" ? \"Yes\" : \"No\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 18\n}, this);\n\n//const root = document.getElementById(\"root\") as HTMLElement;\nconst writ = ReactDOMClient.createRoot(document.getElementById(\"root\"));\nwrit.render(elemets);\nvar _c;\n$RefreshReg$(_c, \"Clicking\");","map":{"version":3,"names":["React","ReactDOMClient","jsxDEV","_jsxDEV","Clicking","console","log","_c","mouseK","helpText","textBlock","id","type","chars","value","fontSize","fontFamily","color","bold","imageBlock","data","graphicBlock","templates","pages","typeContent","currentSelection","position","x","y","size","width","height","layerType","canvas","backgroundColor","layers","elemets","className","children","placeholder","onClick","onMouseEnter","fileName","_jsxFileName","lineNumber","columnNumber","writ","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/user/Documents/frontend/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport * as ReactDOMClient from 'react-dom/client';\r\nconst Clicking = () => console.log(\"Yeees\")\r\nconst mouseK = () => console.log(\"noood\")\r\nconst helpText = \"Help text\"\r\n\r\n\r\ntype Char = {\r\n  value: string;\r\n  fontSize: number;\r\n  fontFamily: string;\r\n  color: string;\r\n  bold: boolean;\r\n};\r\n\r\ntype Size = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\ntype Position = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Block = {\r\n  id: string;\r\n  type: string;\r\n};\r\n\r\ntype TextBlock = Block & {\r\n  type: \"text\";\r\n  chars: Array<Char>;\r\n};\r\n\r\ntype ImageBlock = Block & {\r\n  type: \"image\";\r\n  data: string;\r\n};\r\n\r\ntype GraphicObject = Block & {\r\n  type: \"graphic\";\r\n  data: object;\r\n};\r\n\r\ntype Select = {\r\n  position: Position;\r\n  size: Size;\r\n};\r\n\r\ntype Layer = {\r\n  selection: Select;\r\n  content: Array<TextBlock | ImageBlock | GraphicObject>;\r\n};\r\n\r\ntype Canvas = {\r\n  backgroundColor: string;\r\n  size: Size;\r\n  layers: Array<Layer>;\r\n  currentSelection: Select;\r\n};\r\n\r\ntype Page = {\r\n  layerType: string;\r\n  typeContent: Array<TextBlock | ImageBlock | GraphicObject>;\r\n  currentSelection: Select;\r\n  size: Size;\r\n};\r\n\r\ntype Templates = {\r\n  pages: Array<Page>;\r\n};\r\n\r\nconst textBlock: TextBlock = {\r\n  id: \"id\",\r\n  type: \"text\",\r\n  chars: [\r\n    {\r\n      value: \"h\",\r\n      fontSize: 12,\r\n      fontFamily: \"Arial\",\r\n      color: \"#ff0000\",\r\n      bold: true,\r\n    },\r\n  ],\r\n};\r\n\r\nconst imageBlock: ImageBlock = {\r\n  id: \"id\",\r\n  type: \"image\",\r\n  data: \"https://\",\r\n};\r\n\r\nconst graphicBlock: GraphicObject = {\r\n  id: \"id\",\r\n  type: \"graphic\",\r\n  data: {},\r\n};\r\n\r\nconst templates: Templates = {\r\n  pages: [\r\n    {\r\n      typeContent: [textBlock, imageBlock, graphicBlock],\r\n      currentSelection: {\r\n        position: { x: 0, y: 0 },\r\n        size: { width: 100, height: 100 },\r\n      },\r\n      size: { width: 800, height: 600 },\r\n      layerType: \"layerType\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst canvas: Canvas = {\r\n  backgroundColor: \"#fff\",\r\n  size: { width: 1200, height: 900 },\r\n  layers: [],\r\n  currentSelection: { position: { x: 0, y: 0 }, size: { width: 0, height: 0 } },\r\n};\r\n\r\nconsole.log(canvas, templates);\r\n\r\n\r\nconst elemets = (<div className='name'>\r\n  <input placeholder={helpText} onClick={Clicking} onMouseEnter={mouseK} />\r\n  <p>{1 + 5}</p>\r\n  <p>{helpText === \"Help text\" ? \"Yes\" : \"No\"}</p>\r\n</div>)\r\n\r\n\r\n//const root = document.getElementById(\"root\") as HTMLElement;\r\nconst writ = ReactDOMClient.createRoot(document.getElementById(\"root\") as HTMLElement);\r\n\r\nwrit.render(elemets);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}