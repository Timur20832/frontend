{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\frontend\\\\src\\\\components\\\\slide.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowTextElement(Element) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: Element.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = ShowTextElement;\nfunction ShowImageElement(Element) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: require(\"../img/kot.jpg\"),\n    alt: \"jopa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ShowImageElement;\nfunction ShowGraphicElement(Element) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: require(\"../img/circle-shape.svg\"),\n    alt: \"kek\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c3 = ShowGraphicElement;\nfunction SelectTypeOfElement(Element) {\n  switch (Element.type) {\n    case \"Text\":\n      return ShowTextElement(Element);\n    case \"Image\":\n      return ShowImageElement(Element);\n    case \"Figure\":\n      return ShowGraphicElement(Element);\n  }\n}\n_c4 = SelectTypeOfElement;\nexport function ShowSlide(presentation) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: presentation.slide.map(slide => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: slide.elements.map(element => SelectTypeOfElement(element))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_c5 = ShowSlide;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ShowTextElement\");\n$RefreshReg$(_c2, \"ShowImageElement\");\n$RefreshReg$(_c3, \"ShowGraphicElement\");\n$RefreshReg$(_c4, \"SelectTypeOfElement\");\n$RefreshReg$(_c5, \"ShowSlide\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ShowTextElement","Element","children","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","ShowImageElement","src","require","alt","_c2","ShowGraphicElement","_c3","SelectTypeOfElement","type","_c4","ShowSlide","presentation","slide","map","elements","element","_c5","$RefreshReg$"],"sources":["C:/Users/user/Documents/frontend/src/components/slide.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    Presentation,\r\n    SlideElement,\r\n    Figure,\r\n    Picture,\r\n    TextBox,\r\n    GeneralElementType,\r\n\r\n} from \"../data/types\";\r\n\r\n\r\n\r\nfunction ShowTextElement(Element: TextBox) {\r\n    return (\r\n        <p>\r\n            {Element.content}\r\n        </p>\r\n    );\r\n}\r\n\r\nfunction ShowImageElement(Element: Picture) {\r\n    return (\r\n        <img src={require(\"../img/kot.jpg\")} alt=\"jopa\" />\r\n    );\r\n}\r\n\r\nfunction ShowGraphicElement(Element: Figure) {\r\n    return (\r\n        <img src={require(\"../img/circle-shape.svg\")} alt=\"kek\" />\r\n    );\r\n}\r\n\r\nfunction SelectTypeOfElement(Element: GeneralElementType) {\r\n    switch (Element.type) {\r\n        case \"Text\":\r\n            return ShowTextElement(Element)\r\n        case \"Image\":\r\n            return ShowImageElement(Element);\r\n        case \"Figure\":\r\n            return ShowGraphicElement(Element);\r\n    }\r\n}\r\n\r\n\r\nexport function ShowSlide(presentation: Presentation) {\r\n    return (\r\n        <ul>\r\n            {presentation.slide.map((slide) => (\r\n                <li>\r\n                    {/* {ShowElement(slide.elements[0])} */}\r\n                    {slide.elements.map((element) => (\r\n                        SelectTypeOfElement(element)\r\n                    ))}\r\n                </li>\r\n            )\r\n\r\n            )}\r\n        </ul>\r\n    );\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa1B,SAASC,eAAeA,CAACC,OAAgB,EAAE;EACvC,oBACIF,OAAA;IAAAG,QAAA,EACKD,OAAO,CAACE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEZ;AAACC,EAAA,GANQR,eAAe;AAQxB,SAASS,gBAAgBA,CAACR,OAAgB,EAAE;EACxC,oBACIF,OAAA;IAAKW,GAAG,EAAEC,OAAO,CAAC,gBAAgB,CAAE;IAACC,GAAG,EAAC;EAAM;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE1D;AAACM,GAAA,GAJQJ,gBAAgB;AAMzB,SAASK,kBAAkBA,CAACb,OAAe,EAAE;EACzC,oBACIF,OAAA;IAAKW,GAAG,EAAEC,OAAO,CAAC,yBAAyB,CAAE;IAACC,GAAG,EAAC;EAAK;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAElE;AAACQ,GAAA,GAJQD,kBAAkB;AAM3B,SAASE,mBAAmBA,CAACf,OAA2B,EAAE;EACtD,QAAQA,OAAO,CAACgB,IAAI;IAChB,KAAK,MAAM;MACP,OAAOjB,eAAe,CAACC,OAAO,CAAC;IACnC,KAAK,OAAO;MACR,OAAOQ,gBAAgB,CAACR,OAAO,CAAC;IACpC,KAAK,QAAQ;MACT,OAAOa,kBAAkB,CAACb,OAAO,CAAC;EAC1C;AACJ;AAACiB,GAAA,GATQF,mBAAmB;AAY5B,OAAO,SAASG,SAASA,CAACC,YAA0B,EAAE;EAClD,oBACIrB,OAAA;IAAAG,QAAA,EACKkB,YAAY,CAACC,KAAK,CAACC,GAAG,CAAED,KAAK,iBAC1BtB,OAAA;MAAAG,QAAA,EAEKmB,KAAK,CAACE,QAAQ,CAACD,GAAG,CAAEE,OAAO,IACxBR,mBAAmB,CAACQ,OAAO,CAC9B;IAAC;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAGR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAACkB,GAAA,GAfeN,SAAS;AAAA,IAAAX,EAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}